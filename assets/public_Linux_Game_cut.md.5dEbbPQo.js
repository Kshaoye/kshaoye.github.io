import{_ as o,o as t,c as e,R as a}from"./chunks/framework.lRpTLXAH.js";const k=JSON.parse('{"title":"关卡名称：切割数据的艺术","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"public/Linux/Game/cut.md","filePath":"public/Linux/Game/cut.md"}'),s={name:"public/Linux/Game/cut.md"},l=a('<h1 id="关卡名称-切割数据的艺术" tabindex="-1">关卡名称：<strong>切割数据的艺术</strong> <a class="header-anchor" href="#关卡名称-切割数据的艺术" aria-label="Permalink to &quot;关卡名称：**切割数据的艺术**&quot;">​</a></h1><h2 id="背景故事" tabindex="-1">背景故事： <a class="header-anchor" href="#背景故事" aria-label="Permalink to &quot;背景故事：&quot;">​</a></h2><p>玩家需要解析一份网络日志文件，找到特定信息来追踪病毒的来源。</p><p>需要通过学习掌握 <code>cut</code> 命令，以便从文件中提取所需数据。</p><h2 id="关卡结构" tabindex="-1">关卡结构： <a class="header-anchor" href="#关卡结构" aria-label="Permalink to &quot;关卡结构：&quot;">​</a></h2><h3 id="关卡1-cut-命令基础" tabindex="-1">关卡1：<code>cut</code> 命令基础 <a class="header-anchor" href="#关卡1-cut-命令基础" aria-label="Permalink to &quot;关卡1：`cut` 命令基础&quot;">​</a></h3><p>好的，下面是修改后的任务1.0，以查看 <code>/etc/passwd</code> 文件的最后十行，并提取每行的第一列和第七列，用于检查是否有黑客在系统中添加了账号，并查看这些账号对应的登录 shell：</p><h4 id="任务1-0-检查-etc-passwd-文件最后十行的第一列和第七列" tabindex="-1">任务1.0：检查 <code>/etc/passwd</code> 文件最后十行的第一列和第七列 <a class="header-anchor" href="#任务1-0-检查-etc-passwd-文件最后十行的第一列和第七列" aria-label="Permalink to &quot;任务1.0：检查 `/etc/passwd` 文件最后十行的第一列和第七列&quot;">​</a></h4><ul><li><strong>目标</strong>：查看 <code>/etc/passwd</code> 文件的最后十行，提取每行的第一列（用户名）和第七列（登录 shell）。</li><li><strong>提示</strong>：使用 <code>tail</code> 命令查看文件的末尾行，并结合 <code>cut</code> 命令提取所需列。</li><li><strong>命令示例</strong>：<code>tail -n 10 /etc/passwd | cut -d: -f1,7</code></li><li><strong>任务代码</strong>：</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看 /etc/passwd 文件的最后十行，并提取第一列（用户名）和第七列（登录 shell）</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tail</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/passwd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cut</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f1,7</span></span></code></pre></div><ul><li><strong>预期输出</strong>： <ul><li>输出会列出最后十行中每行的用户名和对应的登录 shell。玩家需要检查是否有不明账号和不正常的登录 shell。</li></ul></li></ul><h4 id="任务1-1-理解-cut-命令的基本用法" tabindex="-1">任务1.1：理解 <code>cut</code> 命令的基本用法 <a class="header-anchor" href="#任务1-1-理解-cut-命令的基本用法" aria-label="Permalink to &quot;任务1.1：理解 `cut` 命令的基本用法&quot;">​</a></h4><ul><li><strong>目标</strong>：从文件 <code>network.log</code> 中提取每行的前10个字符。</li><li><strong>提示</strong>：使用 <code>cut</code> 命令的 <code>-c</code> 选项。</li><li><strong>命令示例</strong>：<code>cut -c 1-10 network.log</code></li><li><strong>奖励</strong>：获得一个关于 <code>cut</code> 命令选项的简明指南。</li></ul><h4 id="任务1-2-按定界符切割" tabindex="-1">任务1.2：按定界符切割 <a class="header-anchor" href="#任务1-2-按定界符切割" aria-label="Permalink to &quot;任务1.2：按定界符切割&quot;">​</a></h4><ul><li><strong>目标</strong>：从文件 <code>network.log</code> 中提取第二列，列与列之间以逗号分隔。</li><li><strong>提示</strong>：使用 <code>cut</code> 命令的 <code>-d</code> 和 <code>-f</code> 选项。</li><li><strong>命令示例</strong>：<code>cut -d&#39;,&#39; -f2 network.log</code></li><li><strong>奖励</strong>：解锁下一个任务并获得一个网络日志分析工具。</li></ul><h3 id="关卡2-进阶用法和综合应用" tabindex="-1">关卡2：进阶用法和综合应用 <a class="header-anchor" href="#关卡2-进阶用法和综合应用" aria-label="Permalink to &quot;关卡2：进阶用法和综合应用&quot;">​</a></h3><h4 id="任务2-1-提取多个字段" tabindex="-1">任务2.1：提取多个字段 <a class="header-anchor" href="#任务2-1-提取多个字段" aria-label="Permalink to &quot;任务2.1：提取多个字段&quot;">​</a></h4><ul><li><strong>目标</strong>：从文件 <code>network.log</code> 中提取第一和第三列，列与列之间以空格分隔。</li><li><strong>提示</strong>：使用 <code>cut</code> 命令的 <code>-d</code> 和 <code>-f</code> 选项，注意列的索引。</li><li><strong>命令示例</strong>：<code>cut -d&#39; &#39; -f1,3 network.log</code></li><li><strong>奖励</strong>：获得一个关于多字段提取的实战技巧指南。</li></ul><h4 id="任务2-2-结合其他命令使用" tabindex="-1">任务2.2：结合其他命令使用 <a class="header-anchor" href="#任务2-2-结合其他命令使用" aria-label="Permalink to &quot;任务2.2：结合其他命令使用&quot;">​</a></h4><ul><li><strong>目标</strong>：将 <code>network.log</code> 文件中的数据按行排序，并提取每行的第二列，列与列之间以制表符分隔。</li><li><strong>提示</strong>：结合使用 <code>sort</code> 和 <code>cut</code> 命令。</li><li><strong>命令示例</strong>：<code>sort network.log | cut -d$&#39;\\t&#39; -f2</code></li><li><strong>奖励</strong>：解锁下一个大关卡并获得高级日志分析工具。</li></ul><h3 id="关卡3-实战挑战" tabindex="-1">关卡3：实战挑战 <a class="header-anchor" href="#关卡3-实战挑战" aria-label="Permalink to &quot;关卡3：实战挑战&quot;">​</a></h3><h4 id="任务3-1-日志数据清洗" tabindex="-1">任务3.1：日志数据清洗 <a class="header-anchor" href="#任务3-1-日志数据清洗" aria-label="Permalink to &quot;任务3.1：日志数据清洗&quot;">​</a></h4><ul><li><strong>目标</strong>：从文件 <code>network.log</code> 中提取所有IP地址（假设在第三列，列与列之间以冒号分隔），并去重。</li><li><strong>提示</strong>：结合使用 <code>cut</code> 和 <code>sort</code> 命令，了解如何去重。</li><li><strong>命令示例</strong>：<code>cut -d&#39;:&#39; -f3 network.log | sort | uniq</code></li><li><strong>奖励</strong>：解锁高级网络安全工具和病毒追踪情报。</li></ul><h3 id="游戏界面" tabindex="-1">游戏界面： <a class="header-anchor" href="#游戏界面" aria-label="Permalink to &quot;游戏界面：&quot;">​</a></h3><ol><li><strong>虚拟终端</strong>：中心区域为虚拟终端，玩家在其中输入命令并即时看到结果。</li><li><strong>任务面板</strong>：左侧显示当前任务和任务目标。</li><li><strong>提示区</strong>：右侧提供命令参考和使用示例，玩家可以根据需要查看。</li><li><strong>积分和进度条</strong>：顶部显示玩家当前积分和任务进度。</li></ol><h3 id="小结" tabindex="-1">小结： <a class="header-anchor" href="#小结" aria-label="Permalink to &quot;小结：&quot;">​</a></h3><p>通过这个关卡，玩家将逐步掌握 <code>cut</code> 命令的基本和进阶用法，学会如何在实际场景中使用它来处理和分析文本数据。这种任务驱动的学习方式不仅能提高玩家的Linux技能，还能增强他们解决实际问题的能力。</p>',27),i=[l];function r(n,c,d,h,u,g){return t(),e("div",null,i)}const b=o(s,[["render",r]]);export{k as __pageData,b as default};
