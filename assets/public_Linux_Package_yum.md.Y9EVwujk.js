import{_ as e,o as a,c as t,R as r}from"./chunks/framework.lRpTLXAH.js";const d=JSON.parse('{"title":"yum","description":"","frontmatter":{},"headers":[],"relativePath":"public/Linux/Package/yum.md","filePath":"public/Linux/Package/yum.md"}'),u={name:"public/Linux/Package/yum.md"},l=r('<h1 id="yum" tabindex="-1">yum <a class="header-anchor" href="#yum" aria-label="Permalink to &quot;yum&quot;">​</a></h1><p>yum是一个基于rpm包的软件管理器</p><p>它基于C/S架构（Client/Server），能从配置好的yum仓库中下载rpm包并安装，可以自动处理依赖关系并且一次性安装所有的依赖包，不要繁琐的一次一次下载、安装依赖包。</p><p>Debian系列（包括Ubuntu、Kali）用的apt-get</p><p>yum的分类：</p><p>本地yum：客户端和服务器在同一台机器上</p><p>远程yum：服务器是一台机器，客户端是另外一台机器</p><p>工作原理</p><p>yum仓库（服务端）是rpm包以及包与包之间的依赖关系组成</p><p>yum客户端是由yum配置文件、缓存数据组成</p><p>客户端工作原理：</p><p>1、yum源设置完成后，yum会到各个可用的yum仓库下载元数据，并缓存在/var/cache/yum目录下</p><p>2、当管理员要安装某个软件时，yum会根据具体的操作请求分析缓存在本地的元数据，结合系统已安装的软件包，分析要安装或者升级的软件包列表</p><p>3、向yum仓库请求分析出来的软件包列表的软件，下载到本地进行安装</p><p>4、安装完成之后，清除本次安装过程中下载到本地的软件包，以节省磁盘空间</p><h2 id="如何设置yum源" tabindex="-1">如何设置yum源 <a class="header-anchor" href="#如何设置yum源" aria-label="Permalink to &quot;如何设置yum源&quot;">​</a></h2><p>默认的yum源定义文件在/etc/yum.repos.d目录下，后缀是.repo</p><p>.repo文件的格式</p><blockquote><p>[]填写yum源的ID，可以是任意字符串，为了方便查看，通常与文件名相同</p><p>name指定yum源的名字，可以为任意字符串，为了方便查看，通常与文件名相同</p><p>baseurl指定yum源的URL（可以是http、FTP、或者本地路径）</p><p>gpgcheck安装软件时是否检查签名（0表示不检查，1表示检查）</p><p>gpgkey如何检查软件包的签名，该语句定义检查签名的秘钥文件</p><p>enabled是否激活yum源，0表示禁用，1表示激活，默认是激活</p></blockquote><hr><h2 id="例子-设置一个光盘yum源" tabindex="-1">例子：设置一个光盘yum源 <a class="header-anchor" href="#例子-设置一个光盘yum源" aria-label="Permalink to &quot;例子：设置一个光盘yum源&quot;">​</a></h2><blockquote><p>查看系统版本</p><p>cat /etc/redhat-release</p><p>或者</p><p>cat /etc/centos-release</p></blockquote><hr><blockquote><p>挂载对应版本的系统光盘</p></blockquote><hr><blockquote><p>进入/etc/yum.repos.d目录</p><p>cd /etc/yum.repos.d</p></blockquote><hr><blockquote><p>创建一个备份目录</p><p>mkdir -pv backup</p></blockquote><hr><blockquote><p>把系统原有的repo文件移动到刚才创建的备份目录下</p><p>mv ./*.repo backup/</p></blockquote><hr><blockquote><p>新建配置文件</p><p>vim local-CD.repo</p><p>[local-CD] name=local-CD baseurl=file:///mnt/cd enabled=1 gpgcheck=0</p></blockquote><hr><blockquote><p>清理yum源</p><p>yum clean all</p></blockquote><hr><blockquote><p>获取yum目录</p><p>yum repolist</p></blockquote><hr><blockquote><p>查看yum源中的软件包</p><p>yum list | more</p></blockquote><hr><h2 id="例2-远程的yum源" tabindex="-1">例2：远程的yum源 <a class="header-anchor" href="#例2-远程的yum源" aria-label="Permalink to &quot;例2：远程的yum源&quot;">​</a></h2><p>1、备份现有的repo文件</p><p>2、下载网易的repo文件</p><blockquote><p>wget <a href="http://mirrors.163.com/.help/CentOS7-Base-163.repo" target="_blank" rel="noreferrer">http://mirrors.163.com/.help/CentOS7-Base-163.repo</a></p></blockquote><p>3、清理yum源</p><p>yum clean all</p><p>4、获取yum目录</p><p>yum repolist</p><p>5、查看软件包列表</p><p>yum list | more</p><h2 id="yum的常见操作" tabindex="-1">yum的常见操作 <a class="header-anchor" href="#yum的常见操作" aria-label="Permalink to &quot;yum的常见操作&quot;">​</a></h2><h3 id="yum-clean-all-清除缓存" tabindex="-1">yum clean all 清除缓存 <a class="header-anchor" href="#yum-clean-all-清除缓存" aria-label="Permalink to &quot;yum clean all 清除缓存&quot;">​</a></h3><h3 id="yum-repolist-显示yum源的清单" tabindex="-1">yum repolist 显示yum源的清单 <a class="header-anchor" href="#yum-repolist-显示yum源的清单" aria-label="Permalink to &quot;yum repolist 显示yum源的清单&quot;">​</a></h3><p>（/etc/yum.repos.d目录下.repo结尾的文件）</p><h3 id="yum-info-包名-查看软件包的信息-类似于rpm-qi" tabindex="-1">yum info 包名 查看软件包的信息（类似于rpm -qi） <a class="header-anchor" href="#yum-info-包名-查看软件包的信息-类似于rpm-qi" aria-label="Permalink to &quot;yum info 包名 查看软件包的信息（类似于rpm -qi）&quot;">​</a></h3><h3 id="yum-install-y-tree-vsftpd-ftp-自动安装三个软件" tabindex="-1">yum install -y tree vsftpd ftp 自动安装三个软件 <a class="header-anchor" href="#yum-install-y-tree-vsftpd-ftp-自动安装三个软件" aria-label="Permalink to &quot;yum install -y tree vsftpd ftp 自动安装三个软件&quot;">​</a></h3><h3 id="yum-reinstall-y-tree-重装tree" tabindex="-1">yum reinstall -y tree 重装tree <a class="header-anchor" href="#yum-reinstall-y-tree-重装tree" aria-label="Permalink to &quot;yum reinstall -y tree 重装tree&quot;">​</a></h3><h3 id="yum-update-更新一个或多个软件包" tabindex="-1">yum update 更新一个或多个软件包 <a class="header-anchor" href="#yum-update-更新一个或多个软件包" aria-label="Permalink to &quot;yum update 更新一个或多个软件包&quot;">​</a></h3><h3 id="yum-list-列出yum源中所有的软件包" tabindex="-1">yum list 列出yum源中所有的软件包 <a class="header-anchor" href="#yum-list-列出yum源中所有的软件包" aria-label="Permalink to &quot;yum list 列出yum源中所有的软件包&quot;">​</a></h3><h3 id="yum-grouplist-列出软件包的分组" tabindex="-1">yum grouplist 列出软件包的分组 <a class="header-anchor" href="#yum-grouplist-列出软件包的分组" aria-label="Permalink to &quot;yum grouplist 列出软件包的分组&quot;">​</a></h3><h3 id="yum-provides-命令名-查询提供命令的软件包" tabindex="-1">yum provides 命令名 查询提供命令的软件包 <a class="header-anchor" href="#yum-provides-命令名-查询提供命令的软件包" aria-label="Permalink to &quot;yum provides 命令名 查询提供命令的软件包&quot;">​</a></h3><h3 id="yum-search-关键字-根据关键字搜索软件" tabindex="-1">yum search 关键字 根据关键字搜索软件 <a class="header-anchor" href="#yum-search-关键字-根据关键字搜索软件" aria-label="Permalink to &quot;yum search 关键字 根据关键字搜索软件&quot;">​</a></h3><h3 id="yum-localintall-y-软件包-使用yum安装本地的软件包" tabindex="-1">yum localintall -y 软件包 使用yum安装本地的软件包 <a class="header-anchor" href="#yum-localintall-y-软件包-使用yum安装本地的软件包" aria-label="Permalink to &quot;yum localintall -y 软件包 使用yum安装本地的软件包&quot;">​</a></h3><h3 id="yum-remove-y-软件名-卸载软件" tabindex="-1">yum remove -y 软件名 卸载软件 <a class="header-anchor" href="#yum-remove-y-软件名-卸载软件" aria-label="Permalink to &quot;yum remove -y 软件名 卸载软件&quot;">​</a></h3><hr><h2 id="练习" tabindex="-1">练习： <a class="header-anchor" href="#练习" aria-label="Permalink to &quot;练习：&quot;">​</a></h2><blockquote><p>1、用yum命令查询vsftpd、ftp、samba、mariadb-server的相关信息</p><p>2、用yum安装vsftpd、ftp、mariadb-server</p><p>3、卸载vsftpd、ftp</p></blockquote>',66),o=[l];function p(m,i,y,c,h,s){return a(),t("div",null,o)}const b=e(u,[["render",p]]);export{d as __pageData,b as default};
