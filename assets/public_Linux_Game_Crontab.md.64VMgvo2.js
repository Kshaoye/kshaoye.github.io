import{_ as a,o as t,c as e,R as o}from"./chunks/framework.lRpTLXAH.js";const g=JSON.parse('{"title":"关卡名称：自动化大师","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"public/Linux/Game/Crontab.md","filePath":"public/Linux/Game/Crontab.md"}'),n={name:"public/Linux/Game/Crontab.md"},s=o(`<h1 id="关卡名称-自动化大师" tabindex="-1">关卡名称：<strong>自动化大师</strong> <a class="header-anchor" href="#关卡名称-自动化大师" aria-label="Permalink to &quot;关卡名称：**自动化大师**&quot;">​</a></h1><h2 id="背景故事" tabindex="-1">背景故事： <a class="header-anchor" href="#背景故事" aria-label="Permalink to &quot;背景故事：&quot;">​</a></h2><pre><code>玩家在解开一系列谜题后，发现教务系统的服务器每天在凌晨1点定时运行一个恶意脚本。

为了反制病毒，玩家需要学习如何使用Crontab自动化任务，以监控并阻止病毒的运行。
</code></pre><h2 id="关卡目标" tabindex="-1">关卡目标： <a class="header-anchor" href="#关卡目标" aria-label="Permalink to &quot;关卡目标：&quot;">​</a></h2><pre><code>1. 理解Crontab的基本语法和使用方法。
2. 创建一个Crontab任务，定时运行监控脚本。
3. 使用Crontab查看和管理已有任务。
</code></pre><h2 id="任务细节" tabindex="-1">任务细节： <a class="header-anchor" href="#任务细节" aria-label="Permalink to &quot;任务细节：&quot;">​</a></h2><h3 id="任务1-学习crontab基础" tabindex="-1">任务1：学习Crontab基础 <a class="header-anchor" href="#任务1-学习crontab基础" aria-label="Permalink to &quot;任务1：学习Crontab基础&quot;">​</a></h3><ul><li><strong>目标</strong>：学习Crontab的基本语法和命令。</li><li><strong>任务描述</strong>：了解如何使用<code>crontab -e</code>编辑定时任务，使用<code>crontab -l</code>查看已有任务。</li><li><strong>提示</strong>：Crontab的基本格式为<code>* * * * * command</code>，代表分钟、小时、日期、月份和星期几。 当然可以！以下是修改后的任务2，增加了几个子任务来引导学生学习不同场景的定时任务。</li></ul><h3 id="任务2-创建定时任务" tabindex="-1">任务2：创建定时任务 <a class="header-anchor" href="#任务2-创建定时任务" aria-label="Permalink to &quot;任务2：创建定时任务&quot;">​</a></h3><h4 id="子任务1-每分钟运行监控脚本" tabindex="-1">子任务1：每分钟运行监控脚本 <a class="header-anchor" href="#子任务1-每分钟运行监控脚本" aria-label="Permalink to &quot;子任务1：每分钟运行监控脚本&quot;">​</a></h4><ul><li><p><strong>目标</strong>：创建一个定时任务，每隔1分钟运行一次监控脚本<code>monitor.sh</code>。</p></li><li><p><strong>任务描述</strong>：在Crontab中添加定时任务，以定时运行<code>/home/student/monitor.sh</code>脚本。</p></li><li><p><strong>提示</strong>：使用<code>crontab -e</code>进入编辑模式，并添加任务行。</p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>* * * * * /home/student/monitor.sh</span></span></code></pre></div></li></ul><h4 id="子任务2-每天凌晨4-00执行篮球脚本" tabindex="-1">子任务2：每天凌晨4:00执行篮球脚本 <a class="header-anchor" href="#子任务2-每天凌晨4-00执行篮球脚本" aria-label="Permalink to &quot;子任务2：每天凌晨4:00执行篮球脚本&quot;">​</a></h4><ul><li><p><strong>目标</strong>：创建一个定时任务，每天凌晨4:00运行<code>/opt/basketball.sh</code>。</p></li><li><p><strong>任务描述</strong>：在Crontab中添加定时任务，以每天在固定时间运行<code>/opt/basketball.sh</code>脚本。</p></li><li><p><strong>提示</strong>：使用<code>crontab -e</code>进入编辑模式，并添加任务行。</p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>0 4 * * * /opt/basketball.sh</span></span></code></pre></div></li></ul><h4 id="子任务3-特定日期执行看电视脚本" tabindex="-1">子任务3：特定日期执行看电视脚本 <a class="header-anchor" href="#子任务3-特定日期执行看电视脚本" aria-label="Permalink to &quot;子任务3：特定日期执行看电视脚本&quot;">​</a></h4><ul><li><p><strong>目标</strong>：创建一个定时任务，在5月28日早上8:00运行<code>/opt/watchtv.sh</code>。</p></li><li><p><strong>任务描述</strong>：在Crontab中添加定时任务，以在特定日期和时间运行<code>/opt/watchtv.sh</code>脚本。</p></li><li><p><strong>提示</strong>：使用<code>crontab -e</code>进入编辑模式，并添加任务行。</p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>0 8 28 5 * /opt/watchtv.sh</span></span></code></pre></div></li></ul><h4 id="子任务4-每周一中午12-00备份文件" tabindex="-1">子任务4：每周一中午12:00备份文件 <a class="header-anchor" href="#子任务4-每周一中午12-00备份文件" aria-label="Permalink to &quot;子任务4：每周一中午12:00备份文件&quot;">​</a></h4><ul><li><p><strong>目标</strong>：创建一个定时任务，每周一中午12:00运行<code>/home/student/backup.sh</code>。</p></li><li><p><strong>任务描述</strong>：在Crontab中添加定时任务，以每周固定时间运行<code>/home/student/backup.sh</code>脚本。</p></li><li><p><strong>提示</strong>：使用<code>crontab -e</code>进入编辑模式，并添加任务行。</p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>0 12 * * 1 /home/student/backup.sh</span></span></code></pre></div></li></ul><h3 id="任务3-管理和验证定时任务" tabindex="-1">任务3：管理和验证定时任务 <a class="header-anchor" href="#任务3-管理和验证定时任务" aria-label="Permalink to &quot;任务3：管理和验证定时任务&quot;">​</a></h3><ul><li><strong>目标</strong>：验证定时任务是否成功添加，并学习如何删除或禁用任务。</li><li><strong>任务描述</strong>：查看当前的Crontab任务列表，确认<code>monitor.sh</code>任务已添加，并删除无用的定时任务。</li><li><strong>提示</strong>：使用<code>crontab -l</code>查看任务列表，使用<code>crontab -r</code>删除所有任务，或编辑任务列表删除特定任务。</li></ul><h2 id="关卡完成条件" tabindex="-1">关卡完成条件： <a class="header-anchor" href="#关卡完成条件" aria-label="Permalink to &quot;关卡完成条件：&quot;">​</a></h2><ul><li>成功创建并验证定时任务。</li><li>掌握基本的Crontab管理命令。</li><li>了解如何删除和禁用定时任务。</li></ul><p>​ 希望通过这一关卡，使得学生掌握如何使用Crontab来自动化任务，为学生在实际工作</p><p>应用自动化脚本打下基础。</p>`,23),l=[s];function i(r,c,d,h,p,b){return t(),e("div",null,l)}const m=a(n,[["render",i]]);export{g as __pageData,m as default};
